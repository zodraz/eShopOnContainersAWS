name: "Build for PRe"
description: "Builds a docker image without pushing"

inputs:
  service:
    description: "Service to build"
    required: true
  registry_endpoint:
    description: "Image registry repo e.g. aws_account_id.dkr.ecr.region.amazonaws.com/eshop"
    required: true
  image_name:
    description: "Name of image"
    required: true
  aws-access-key-id:
    description: "AWS Acces Key Id"
    required: true
  aws-secret-access-key:
    description: "AWS Secret Access Key"
    required: true
  aws-region: 
    description: "AWS Region"
    required: true
  
runs:
  using: "composite"
  steps:
  - name: Enable experimental features for the Docker daemon and CLI
    shell: bash
    run: |
        echo $'{\n  "experimental": true\n}' | sudo tee /etc/docker/daemon.json
        mkdir -p ~/.docker
        echo $'{\n  "experimental": "enabled"\n}' | sudo tee ~/.docker/config.json
        sudo service docker restart
        docker version -f '{{.Client.Experimental}}'
        docker version -f '{{.Server.Experimental}}'

  # - name: Configure AWS credentials
  #   uses: aws-actions/configure-aws-credentials@v1
  #   with:
  #     aws-access-key-id: ${{ inputs.aws-access-key-id }}
  #     aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
  #     aws-region: ${{ inputs.aws-region }}

  # - name: Login to Amazon ECR
  #   id: login-ecr
  #   uses: aws-actions/amazon-ecr-login@v1

  - name: Set branch name as env variable
    run: |
      currentbranch=$(echo ${GITHUB_REF##*/})
      echo "running on $currentbranch"
      echo "BRANCH=$currentbranch" >> $GITHUB_ENV
    shell: bash

  # - name: Create ECR repository if not exists eshop/${{ inputs.image_name }}
  #   uses: int128/create-ecr-repository-action@v1
  #   id: ecr
  #   with:
  #    repository: eshop/${{ inputs.image_name }}

  - name: Compose build ${{ inputs.service }}
    shell: bash
    run: sudo -E docker-compose build ${{ inputs.service }}
    working-directory: ./src
    env:
      TAG: ${{ env.BRANCH }}
      REGISTRY: ${{ inputs.registry_endpoint }}