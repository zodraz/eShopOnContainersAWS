# This helm values file defines all infrastructure used by eShopOnContainers.
# It is used on all charts, so ** MUST BE INCLUDED ** on every deployment

inf:
  mesh:
    enabled: false          # True to enable Linkerd (set by deploy-all.ps1)
  tls:
    enabled: true          # True to enable TLS (set by deploy-all.ps1)
    issuer: ""              # cert-manager issuer to use for retrieving certs (set by deploy-all.ps1)
  sql:                      # inf.sql defines the sql server databases & logins
    host:  my-sql-server   # Uncomment to specify a custom sql-server to be used. By default "sql-data-<appname>" will be used  
    common:
      user: sa              # SQL user
      pwd: Pass@word        # SQL pwd
      pid: Developer
    catalog:                # inf.sql.catalog: settings for the catalog-api sql (user, pwd, db)
      db: CatalogDb         # Catalog API SQL db name
    ordering:               # inf.sql.ordering: settings for the ordering-api sql (user, pwd, db)
      db: OrderingDb        # Ordering API SQL db name
    identity:
      db: IdentityDb        # Ordering API SQL db name
    webhooks:
      db: WebhooksDb        # Webhooks DB
    signalrhub:
      db: SignalRHubDb      # SignalR db name
  mongo:
    host: #my-nosql-data    # Uncomment to use specify custom mongo host. By default nosql-data is used
  redis:                    # inf.redis defines the redis' connection strings
    basket:     
      svc: basket-data      # Name of k8s svc for basket redis     
      constr: basket-data   # Connection string to Redis used by Basket API
    keystore:
      svc: keystore-data    # Name of k8s svc for keystore-data redis
      constr: keystore-data # Connection string to Redis used as a Keystore (by Identity API)
  eventbus:
    host: b-5d61595e-b01a-481b-943d-cae6f9471986.mq.eu-central-1.amazonaws.com          # Name of rabbitmq aws host
    username: abel          # Rabbitmq username
    password: "!Asdf12345"  # Rabbitmq password
    isSecure: true          # Rabbitmq secure connection
    persistenceEnabled: false # Rebus persistence enabled
    outboxEnabled: false     # Rebus Outbox functionality enabled
    rabbitmqEnabled: false  # True for Rabbitmq enabled. False to use SQS and SNS
    retryCount: 5           # Rebus number of retries
    auditEnabled: True      # Rebus audit functionality enabled
    fleetManager:         
      enabled: False        # Rebus FleetManager functionality enabled
      url: "http://kkkk"    # Rebus FleetManager url
      apiKey: "xxxxxxxxxx"  # Rebus FleetManager API key
    svc: rabbitmq           # Name of k8s svc for rabbitmq
  serilog:
    seqServerUrl": "http://localhost:5341"
    logstashgUrl": ""
    lokiUrl": ""
  jaeger:
    host: "localhost"
    port: 6831
  useAWS: true
  useDocumentDb: false
  S3Enabled: false
  useVault: true
  aws:
    profile: default
    region: eu-central-1
  localstack:
    useLocalStack: false
    localStackUrl: ""
  otlpEndpoint: http://localhost:4317
  k8s:                      # inf.k8s defines Kubernetes cluster global config
    dns:  "eshoponcontainersaws.com"                # k8s external  DNS. This value or ip value MUST BE PROVIDED
    local: false            # True when deploying on "local K8s" provided by Docker Desktop.
  misc:                     # inf.misc contains miscellaneous configuration related to infrastructure
    useS3: false            # If catalog api uses AWS S3 or not
  registry:                # Uncomment "registry" to specify registry secret
    secretName:            # secretName is the name of the secret inside k8s   
    server:                # Registry login server
    login:                 # User login
    pwd:                   # User pwd

